// <auto-generated />
using System;
using FireStationAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FireStationAPI.Migrations
{
    [DbContext(typeof(FirestationContext))]
    [Migration("20220529104200_AddModelsAndSeedDb")]
    partial class AddModelsAndSeedDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FireStationAPI.Entities.Action", b =>
                {
                    b.Property<int>("IdAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAction"), 1L, 1);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NeedSpecialEquipment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAction")
                        .HasName("Action_pk");

                    b.ToTable("Action", (string)null);

                    b.HasData(
                        new
                        {
                            IdAction = 1,
                            EndTime = new DateTime(2022, 2, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            NeedSpecialEquipment = true,
                            StartTime = new DateTime(2022, 2, 18, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdAction = 2,
                            EndTime = new DateTime(2022, 5, 19, 22, 42, 0, 288, DateTimeKind.Local).AddTicks(1010),
                            NeedSpecialEquipment = true,
                            StartTime = new DateTime(2022, 5, 19, 12, 42, 0, 288, DateTimeKind.Local).AddTicks(1010)
                        },
                        new
                        {
                            IdAction = 3,
                            NeedSpecialEquipment = false,
                            StartTime = new DateTime(2022, 5, 29, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdAction = 4,
                            EndTime = new DateTime(2022, 5, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            NeedSpecialEquipment = false,
                            StartTime = new DateTime(2022, 5, 24, 4, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("FireStationAPI.Entities.FireTruck", b =>
                {
                    b.Property<int>("IdFiretruck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFiretruck"), 1L, 1);

                    b.Property<string>("OperationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SpecialEquipment")
                        .HasColumnType("bit");

                    b.HasKey("IdFiretruck")
                        .HasName("Firetruck_pk");

                    b.ToTable("FireTruck", (string)null);

                    b.HasData(
                        new
                        {
                            IdFiretruck = 1,
                            OperationNumber = "51",
                            SpecialEquipment = true
                        },
                        new
                        {
                            IdFiretruck = 2,
                            OperationNumber = "10",
                            SpecialEquipment = false
                        },
                        new
                        {
                            IdFiretruck = 3,
                            OperationNumber = "104",
                            SpecialEquipment = false
                        },
                        new
                        {
                            IdFiretruck = 4,
                            OperationNumber = "321",
                            SpecialEquipment = true
                        },
                        new
                        {
                            IdFiretruck = 5,
                            OperationNumber = "161",
                            SpecialEquipment = false
                        },
                        new
                        {
                            IdFiretruck = 6,
                            OperationNumber = "571",
                            SpecialEquipment = true
                        });
                });

            modelBuilder.Entity("FireStationAPI.Entities.FireTruckAction", b =>
                {
                    b.Property<int>("IdAction")
                        .HasColumnType("int");

                    b.Property<int>("IdFiretruck")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAction", "IdFiretruck")
                        .HasName("FireTruck_Action_pk");

                    b.HasIndex("IdFiretruck");

                    b.ToTable("FireTruck_Action", (string)null);
                });

            modelBuilder.Entity("FireStationAPI.Entities.FireTruckAction", b =>
                {
                    b.HasOne("FireStationAPI.Entities.Action", "IdActionNavigation")
                        .WithMany("FireTruckActions")
                        .HasForeignKey("IdAction")
                        .IsRequired()
                        .HasConstraintName("FiretruckAction_Action");

                    b.HasOne("FireStationAPI.Entities.FireTruck", "IdFiretruckNavigation")
                        .WithMany("FireTruckActions")
                        .HasForeignKey("IdFiretruck")
                        .IsRequired()
                        .HasConstraintName("FiretruckAction_Firetruck");

                    b.Navigation("IdActionNavigation");

                    b.Navigation("IdFiretruckNavigation");
                });

            modelBuilder.Entity("FireStationAPI.Entities.Action", b =>
                {
                    b.Navigation("FireTruckActions");
                });

            modelBuilder.Entity("FireStationAPI.Entities.FireTruck", b =>
                {
                    b.Navigation("FireTruckActions");
                });
#pragma warning restore 612, 618
        }
    }
}
